<launch>
<!-- load the model "starting_pen" into Gazebo -->
<node name="spawn_sdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find exmpl_models)/starting_pen/model.sdf -sdf -model starting_pen -y -5" />

<!-- Convert xacro model file and put on parameter server -->
<param name="robot_description" command="$(find xacro)/xacro.py '$(find mobot_urdf)/urdf/mobot_w_lidar_and_kinect.xacro'" />

<!-- Spawn the robot from parameter server into Gazebo -->
<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model mobot" />

<node pkg="tf" type="static_transform_publisher" name="kinect_broadcaster" args="0 0 0 -0.500 0.500 -0.500 0.500 kinect_link kinect_depth_frame 100" />

<!-- start a robot_state_publisher -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

<!--navstack config files-->
    <rosparam file="$(find mobot_nav_config)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mobot_nav_config)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find mobot_nav_config)/base_local_planner_params.yaml" command="load" />

    <rosparam file="$(find mobot_nav_config)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find mobot_nav_config)/global_costmap_params.yaml" command="load" />

<!-- launch rviz using a specific config file -->
 <node pkg="rviz" type="rviz" name="rviz" args="-d $(find mobot_urdf)/rviz_config/mobot_w_lidar_and_kinect.rviz"/>
 
  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" 
     args="$(find maps)/starting_pen/starting_pen_map.yaml"/>

  <!--node pkg="amcl" type="amcl" name="amcl" output="screen"--> 
  <!-- try differential-drive amcl config params...-->
<include file="$(find amcl)/examples/amcl_diff.launch"/>

 <!--invokes planning and control nodes -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen"/>



</launch>
